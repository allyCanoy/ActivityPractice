using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace ActivityPractice
{
    public partial class activityProducts : System.Web.UI.Page
    {
        /*===================== SQL CONNECTION =====================*/
        SqlConnection sqlCon = new SqlConnection(@"Data Source=ICTG-UNIT37;initial Catalog=VantageDB;integrated Security=True;");

        /*================ Global Variable for autogenerated itemcode ================*/

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                btnProDel.Enabled = false;
                fillGridView();
            }
        }

        /*========================== STORE PRODUCT INPUTS ==========================*/

        protected void btnProSave_Click(object sender, EventArgs e)
        {
            //sql connection
            if (sqlCon.State == ConnectionState.Closed)
                sqlCon.Open();

            //validation if textbox are empty
            if (txtCodeID.Text == "" || txtDesc.Text == "" || txtAmount.Text == "")
            {
                lblError.Text = "Product code, product description and product amount are required.";
            }
            else
            {
                try
                {
                    //sql connection
                    if (sqlCon.State == ConnectionState.Closed) 
                        sqlCon.Open();


                    //variables
                    string productCode = txtCodeID.Text.Trim();
                    string description = txtDesc.Text.Trim();
                    decimal amount = Convert.ToDecimal(txtAmount.Text.Trim());

                    string id = hfProdCode.Value; //id for product code
                    

                    

                    bool checkedBox = chkBox.Checked; //boolean to validate if the product is active

                    //inserting input using stored procedure
                    SqlCommand sqlCmd = new SqlCommand("createUpdateProduct", sqlCon);
                    sqlCmd.CommandType = CommandType.StoredProcedure;

                    sqlCmd.Parameters.AddWithValue("@id", (hfProdCode.Value == "" ? 0 : Convert.ToInt32(hfProdCode.Value)));

                    sqlCmd.Parameters.AddWithValue("@proCode", productCode);
                    sqlCmd.Parameters.AddWithValue("@proDesc", description);
                    sqlCmd.Parameters.AddWithValue("@amount", amount);

                    
                   

                    sqlCmd.Parameters.AddWithValue("@isActive", checkedBox);



                    sqlCmd.Parameters.AddWithValue("@createdDate", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));
                    sqlCmd.Parameters.AddWithValue("@modifiedDate", DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"));


                    /*
                    if (id != "")
                        lblSuccess.Text = "Product successfully inserted.";
                    else
                        lblSuccess.Text = "Product successfully updated.";
                        */

                    sqlCmd.ExecuteNonQuery();
                    sqlCon.Close();

                    clearProductForm(); //function to clear the form
                    fillGridView(); //function to show data in the table

                    
                }
                catch (Exception)
                {
                    lblSuccess.Text = "";
                    lblError.Text = "Product code already exist.";
                }
            }
        }



        /*========== Public boolean ==========*/
       
        
















        /*============================================= OTHER FUNCTIONS =============================================*/
        //function to display status "Active" or "Inactive" in datagridview
        protected string GetStatus(bool chkBox)
        {
            return chkBox ? "Active" : "Inactive";
        }

        /*========================== FUNCTION TO SHOW DATA IN THE TABLE ==========================*/
        void fillGridView()
        {
            if (sqlCon.State == ConnectionState.Closed)
                sqlCon.Open();

            SqlDataAdapter sqlDa = new SqlDataAdapter("productViewAll", sqlCon);
            sqlDa.SelectCommand.CommandType = CommandType.StoredProcedure;
            DataTable dtbl = new DataTable();
            sqlDa.Fill(dtbl);
            sqlCon.Close();
            gvProducts.DataSource = dtbl;
            gvProducts.DataBind();
        }

        //view link for updating the data
        protected void lnk_OnClick(object sender, EventArgs e)
        {
            int id = Convert.ToInt32((sender as LinkButton).CommandArgument);

            if (sqlCon.State == ConnectionState.Closed)
                sqlCon.Open();

            SqlDataAdapter sqlDa = new SqlDataAdapter("productsViewByID", sqlCon);
            sqlDa.SelectCommand.CommandType = CommandType.StoredProcedure;
            sqlDa.SelectCommand.Parameters.AddWithValue("@id", id);
            DataTable dtbl = new DataTable();
            sqlDa.Fill(dtbl);
            sqlCon.Close();

            hfProdCode.Value = id.ToString(); //hides id

            txtCodeID.ReadOnly = true;
            txtCodeID.Text = dtbl.Rows[0]["code"].ToString();
            txtDesc.Text = dtbl.Rows[0]["productDescription"].ToString();
            txtAmount.Text = dtbl.Rows[0]["amount"].ToString();

            btnProSave.Text = "Update";
            btnProDel.Enabled = true;

            if (chkBox.Checked)
            {
                chkBox.Checked = false;
            }
            else
            {
                chkBox.Checked = true;
            }
            

        }

        /*=================== CLEAR FUNCTION ===================*/
        private void clearProductForm()
        {
            hfProdCode.Value = "";
            txtCodeID.Text = "";
            txtCodeID.ReadOnly = false;
            txtDesc.Text = "";
            txtAmount.Text = "";
            chkBox.Checked = true;

            lblSuccess.Text = lblError.Text = "";

            btnProSave.Text = "Insert";
            btnProDel.Enabled = false;
        }
        /*=================== CLEAR BUTTON ===================*/
        protected void btnProClear_Click(object sender, EventArgs e)
        {
            clearProductForm();
        }

        /*=================== DELETE BUTTON ===================*/
        protected void btnProDel_Click(object sender, EventArgs e)
        {
            if (sqlCon.State == ConnectionState.Closed)
                sqlCon.Open();

            SqlCommand sqlCmd = new SqlCommand("productDeleteByID", sqlCon);
            sqlCmd.CommandType = CommandType.StoredProcedure;
            sqlCmd.Parameters.AddWithValue("@id", Convert.ToInt32(hfProdCode.Value));
            sqlCmd.ExecuteNonQuery();
            sqlCon.Close();
            clearProductForm();
            fillGridView();
            lblSuccess.Text = "Product deleted successfully";
        }

    }
}